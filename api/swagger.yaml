---
swagger: "2.0"
info:
  description: "An API for the NEED HOU Database"
  version: "1.0.0"
  title: "NeedHOU API"
basePath: "/api"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /comments:
    options:
      operationId: "commentsOPTIONS"
      parameters: []
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-swagger-router-controller: "Default"
    get:
      description: "Get comments"
      operationId: "findComments"
      produces:
      - "application/json"
      parameters:
      - name: "comment_id"
        in: "query"
        description: "Filter by comment id"
        required: false
        type: "string"
      - name: "program_id"
        in: "query"
        description: "Filter by program id"
        required: false
        type: "string"
      responses:
        200:
          description: "Comments returned"
          schema:
            type: "string"
      x-swagger-router-controller: "Default"
    post:
      description: "Create comment"
      operationId: "createComment"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "comment_data"
        description: "data for new comment"
        required: true
        schema:
          $ref: "#/definitions/CommentModel"
      responses:
        200:
          description: "Comment succesfully created"
        409:
          description: "Comment already exists"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"

  /queue:
    get:
      description: "Get queue"
      operationId: "findQueue"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Queue returned"
          schema:
            type: "string"
      x-swagger-router-controller: "Default"
    post:
      description: "Add item to queue"
      operationId: "createQueue"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "queue_data"
        description: "data for new program to be added to queue"
        required: true
        schema:
          $ref: "#/definitions/QueueModel"
      responses:
        200:
          description: "Program succesfully created"
        409:
          description: "Program already exists"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /languages:
    put:
      description: "Update languages"
      operationId: "updateLanguage"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Updated language object"
        required: true
        schema:
          $ref: "#/definitions/LanguageModel"
      responses:
        200:
          description: "Program succesfully updated"
        404:
          description: "Program not found"
          schema:
            $ref: "#/definitions/Error"
    options:
      operationId: "languagesOPTIONS"
      parameters: []
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-swagger-router-controller: "Default"
    get:
      description: "Get program langauges"
      operationId: "findLanguages"
      produces:
      - "application/json"
      parameters:
      - name: "program_id"
        in: "query"
        description: "Filter by program id"
        required: false
        type: "string"
      responses:
        200:
          description: "Language succesfully filtered by program_id"
          schema:
            type: "string"
      x-swagger-router-controller: "Default"
    post:
      description: "Create program languages"
      operationId: "createLanguage"
      consumes:
      - "application/x-www-form-urlencoded"
      parameters:
      - in: "body"
        name: "language_data"
        description: "data for new language"
        required: true
        schema:
          $ref: "#/definitions/LanguageModel"
      responses:
        200:
          description: "Languages succesfully created"
      x-swagger-router-controller: "Default"
  /programs:
    options:
      operationId: "programsOPTIONS"
      parameters: []
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-swagger-router-controller: "Default"
    delete:
      description: "Delete a program"
      operationId: "deleteProgram"
      produces:
      - "application/json"
      parameters:
      - name: "program_id"
        in: "query"
        description: "The program that needs to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "Program succesfully deleted"
          schema:
            type: "string"
      x-swagger-router-controller: "Default"
    get:
      description: "Get programs"
      operationId: "findPrograms"
      produces:
      - "application/json"
      parameters:
      - name: "agency_id"
        in: "query"
        description: "Filter by agency id"
        required: false
        type: "string"
      - name: "id"
        in: "query"
        description: "Filter by program id"
        required: false
        type: "string"
      - name: "service_type"
        in: "query"
        description: "Filter by service type"
        required: false
        type: "string"
      responses:
        200:
          description: "Programs succesfully filtered"
          schema:
            type: "string"
        404:
          description: "No program data returned"
          schema:
            type: "string"
      x-swagger-router-controller: "Default"
    post:
      description: "Create new program"
      operationId: "createProgram"
      consumes:
      - "application/x-www-form-urlencoded"
      parameters:
      - in: "body"
        name: "program_data"
        description: "data for new program"
        required: true
        schema:
          $ref: "#/definitions/ProgramModel"
      responses:
        200:
          description: "Program succesfully created"
        409:
          description: "Program already exists"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Update program"
      operationId: "updateProgram"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Updated program object"
        required: true
        schema:
          $ref: "#/definitions/ProgramModel"
      responses:
        200:
          description: "Program succesfully updated"
        404:
          description: "Program not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
  /agencies:
    options:
      operationId: "agenciesOPTIONS"
      parameters: []
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-swagger-router-controller: "Default"
    get:
      description: "Get agencies"
      operationId: "findAgencies"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: "Filter by agency name"
        required: false
        type: "string"
      - name: "search_term"
        in: "query"
        description: "Filter by search term"
        required: false
        type: "string"
      - name: "agency_id"
        in: "query"
        description: "Filter by agency id"
        required: false
        type: "string"
      responses:
        200:
          description: "Agencies succesfully searched"
          schema:
            type: "string"
      x-swagger-router-controller: "Default"
    post:
      description: "Create an agency"
      operationId: "createAgency"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "agency_data"
        description: "data for new agency"
        required: true
        schema:
          $ref: "#/definitions/AgencyModel"
      responses:
        200:
          description: "Agency succesfully created"
        409:
          description: "Agency already exists"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
    put:
      description: "Update agency"
      operationId: "updateAgency"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Updated agency object"
        required: true
        schema:
          $ref: "#/definitions/AgencyModel"
      responses:
        200:
          description: "Agency succesfully updated"
        404:
          description: "Agency not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Default"
definitions:
  Error:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "string"
      message:
        type: "string"
  CommentModel:
    type: "object"
    properties: 
      id:
        type: "string"
      program_id:
        type: "string"
      comment:
        type: "string"
      category:
        type: "string"
      submission_date:
        type: "string"
    example:
      id: "2345235as"
      program_id: "343543sf"
      comment: "This is a comment"
      category: "category"
      submission_date: "Date"
  LanguageModel:
    type: "object"
    properties:
      program_id:
        type: "string"
      language_arr:
        type: "array"
        items: 
          type: "string"
    example:
      program_id: "13124235"
      language_arr:
        - "English"
        - "Spanish"
  AgencyModel:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      physical_address:
        type: "string"
      mailing_address:
        type: "string"
      disability:
        type: "string"
      phone_number:
        type: "string"
      hours:
        type: "string"
    example:
      physical_address: "physical_address"
      mailing_address: "mailing_address"
      hours: "hours"
      disability: "disability"
      name: "name"
      description: "description"
      phone_number: "phone_number"
      id: "id"
  ProgramModel:
    type: "object"
    properties:
      agency_id:
        type: "string"
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      physical_address:
        type: "string"
      hours:
        type: "string"
      ada:
        type: "string"
      eligibility:
        type: "string"
      application_process:
        type: "string"
      documents_required:
        type: "string"
      fee_structure:
        type: "string"
      coverage_area:
        type: "string"
      service_type:
        type: "string"
      last_updated:
        type: "string"
      alternative_name:
        type: "string"
      website:
        type: "string"
      appointment_required:
        type: "string"
      accepting_clients:
        type: "string"
      holiday_schedule: 
        type: "string"
      transportation:
        type: "string"
      contact_firstname:
        type: "string"
      contact_lastname:
        type: "string"
      contact_title:
        type: "string"
      contact_email:
        type: "string"
      contact_phone:
        type: "string"
      latitude:
        type: "number"
      longitude:
        type: "number" 
    example:
      physical_address: "physical_address"
      coverage_area: "coverage_area"
      hours: "hours"
      last_updated: "last_updated"
      agency_id: "agency_id"
      description: "description"
      eligibility: "eligibility"
      application_process: "application_process"
      service_type: "service_type"
      name: "name"
      documents_required: "documents_required"
      fee_structure: "fee_structure"
      id: "id"
      ada: "ada"
      alternative_name: ""
      website: ""
      appointment_required: ""
      accepting_clients: ""
      holiday_schedule: ""
      transportation: ""
      contact_firstname: ""
      contact_lastname: ""
      contact_title: ""
      contact_email: ""
      contact_phone: ""
      latitude: 45.67
      longitude: 76.65
  QueueModel:
    type: "object"
    properties:
      agency_id:
        type: "string"
      id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      physical_address:
        type: "string"
      hours:
        type: "string"
      ada_compliant:
        type: "string"
      eligibility:
        type: "string"
      application_process:
        type: "string"
      documents_required:
        type: "string"
      fee_structure:
        type: "string"
      coverage_area:
        type: "string"
    example:
      physical_address: "physical_address"
      coverage_area: "coverage_area"
      hours: "hours"
      agency_id: "agency_id"
      name: "name"
      documents_required: "documents_required"
      description: "description"
      eligibility: "eligibility"
      fee_structure: "fee_structure"
      id: "id"
      application_process: "application_process"
      ada_compliant: "ada_compliant"
